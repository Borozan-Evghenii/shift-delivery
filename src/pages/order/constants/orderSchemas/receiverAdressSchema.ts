import * as zod from 'zod';

export const receiverAdressSchema = zod.object({
  street: zod
    .string({ required_error: 'Поле является обязательным' })
    .min(1, { message: 'Поле является обязательным' })
    .max(100)
    .regex(/^(?![\s/':;_\-.,#])[a-zA-Zа-яА-ЯёЁ0-9][a-zA-Zа-яА-ЯёЁ0-9\s/':;_\-.,#]*$/, {
      message: 'Недопустим ввод спец. символов в начале и в конце строки'
    })
    .regex(/^(?!.*[a-zA-Z].*[а-яА-ЯёЁ]|.*[а-яА-ЯёЁ].*[a-zA-Z])(?=.*[a-zA-Zа-яА-ЯёЁ0-9]).*$/, {
      message: 'Значения заданы с использованием разных алфавитов'
    })
    .regex(/^(?!.*--)(?!^-)(?!.*-$).*/, {
      message: 'Некорректный формат'
    }),
  house: zod
    .string({ required_error: 'Поле является обязательным' })
    .min(1, { message: 'Поле является обязательным' })
    .max(100)
    .regex(/^(?![\s/':;_\-.,#])[a-zA-Zа-яА-ЯёЁ0-9][a-zA-Zа-яА-ЯёЁ0-9\s/':;_\-.,#]*$/, {
      message: 'Недопустим ввод спец. символов в начале и в конце строки'
    })
    .regex(/^(?!.*[a-zA-Z].*[а-яА-ЯёЁ])(?=.*[a-zA-Z]|.*[а-яА-ЯёЁ0-9]).*$/, {
      message:
        'Значение должно быть задано с использованием одного из следующих алфавитов: кириллического, латинского'
    })
    .regex(/^(?!.*--)(?!^-)(?!.*-$).*/, {
      message: 'Некорректный формат'
    }),
  apartment: zod
    .string({ required_error: 'Поле является обязательным' })
    .min(1, { message: 'Поле является обязательным' })
    .max(100)
    .regex(/^(?![\s/':;_\-.,#])[a-zA-Zа-яА-ЯёЁ0-9\s/':;_\-.,#]*$/, {
      message: 'Недопустим ввод спец. символов в начале и в конце строки'
    }),
  comment: zod
    .string()
    .max(300)
    .regex(/^(?!([A-Za-z]+[А-Яа-яЁё]+|[А-Яа-яЁё]+[A-Za-z]+))\S*/, {
      message:
        'Значение должно быть задано с использованием одного из следующих алфавитов: кириллического, латинского'
    })
    .regex(/^(?![\s/':;_\-.,#])[a-zA-Zа-яА-ЯёЁ0-9\s/':;_\-.,#]*$/, {
      message: 'Недопустим ввод спец. символов в начале и в конце строки'
    })
    .regex(/^(?!.*--)(?!^-)(?!.*-$).*/, {
      message: 'Некорректный формат'
    })
    .optional()
});
