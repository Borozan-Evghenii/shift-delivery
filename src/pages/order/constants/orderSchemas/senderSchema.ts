import * as zod from 'zod';

export const senderSchema = zod.object({
  phone: zod
    .string({ required_error: 'Поле является обязательным' })
    .regex(/^(79\d{9}|0[67]\d{7})$/, { message: '068349754 | 79234232343 | 078349754' }),
  firstname: zod
    .string({ required_error: 'Поле является обязательным' })
    .max(60, { message: 'Вы превысили лимит по символам 60' })
    .regex(/^[a-zA-Z]+/, { message: 'Cтрока начинается только с букв' })
    .regex(/(?:[ '’_][a-zA-Z]+)*/, {
      message: 'Используйте только разрешенные символы " " , ` ‘ -'
    }),
  lastname: zod
    .string({ required_error: 'Поле является обязательным' })
    .regex(/^(?!.*([!@#$%^&*()_+\-=\]{};':"\\|,.<>/?\s])\1).+$/, {
      message: 'Не используйте 2 последовательных специальных символа, включая пробел'
    })
    .regex(/^[a-zA-Z]+/, { message: 'Cтрока начинается только с букв' })
    .regex(/(?:[ '’_][a-zA-Z]+)*/, {
      message: 'Используйте только разрешенные символы " " , ` ‘ -'
    }),
  middlename: zod
    .string()
    .max(60)
    .regex(/^(?!([A-Za-z]+[А-Яа-яЁё]+|[А-Яа-яЁё]+[A-Za-z]+))\S*/, {
      message:
        'Значение должно быть задано с использованием одного из следующих алфавитов: кириллического, латинского'
    })
    .regex(/^(?!.*[a-zA-Z].*[а-яА-ЯёЁ])(?=.*[a-zA-Z]|.*[а-яА-ЯёЁ])?.*$/, {
      message: 'Значения заданы с использованием разных алфавитов'
    })
    .regex(/^(?!.*--)(?!^-)(?!.*-$).*/, {
      message: 'Некорректный формат'
    })
    .regex(/^[^~!@#$%^&*()_+=[\]{};:"|\\./<>?]*$/, {
      message: 'Не используйте специальных символов,'
    })
    .optional()
});
