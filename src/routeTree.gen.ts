/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as ProfileRouteImport } from './routes/profile/route';
import { Route as OrderRouteImport } from './routes/order/route';
import { Route as AuthRouteImport } from './routes/auth/route';
import { Route as HistoryIndexImport } from './routes/history/index';
import { Route as HistoryOrderIdImport } from './routes/history/order.$id';

// Create Virtual Routes

const IndexRouteLazyImport = createFileRoute('/')();

// Create/Update Routes

const ProfileRouteRoute = ProfileRouteImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute
} as any).lazy(() => import('./routes/profile/route.lazy').then((d) => d.Route));

const OrderRouteRoute = OrderRouteImport.update({
  path: '/order',
  getParentRoute: () => rootRoute
} as any).lazy(() => import('./routes/order/route.lazy').then((d) => d.Route));

const AuthRouteRoute = AuthRouteImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute
} as any).lazy(() => import('./routes/auth/route.lazy').then((d) => d.Route));

const IndexRouteLazyRoute = IndexRouteLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute
} as any).lazy(() => import('./routes/index/route.lazy').then((d) => d.Route));

const HistoryIndexRoute = HistoryIndexImport.update({
  path: '/history/',
  getParentRoute: () => rootRoute
} as any).lazy(() => import('./routes/history/index.lazy').then((d) => d.Route));

const HistoryOrderIdRoute = HistoryOrderIdImport.update({
  path: '/history/order/$id',
  getParentRoute: () => rootRoute
} as any).lazy(() => import('./routes/history/order.$id.lazy').then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexRouteLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/auth': {
      id: '/auth';
      path: '/auth';
      fullPath: '/auth';
      preLoaderRoute: typeof AuthRouteImport;
      parentRoute: typeof rootRoute;
    };
    '/order': {
      id: '/order';
      path: '/order';
      fullPath: '/order';
      preLoaderRoute: typeof OrderRouteImport;
      parentRoute: typeof rootRoute;
    };
    '/profile': {
      id: '/profile';
      path: '/profile';
      fullPath: '/profile';
      preLoaderRoute: typeof ProfileRouteImport;
      parentRoute: typeof rootRoute;
    };
    '/history/': {
      id: '/history/';
      path: '/history';
      fullPath: '/history';
      preLoaderRoute: typeof HistoryIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/history/order/$id': {
      id: '/history/order/$id';
      path: '/history/order/$id';
      fullPath: '/history/order/$id';
      preLoaderRoute: typeof HistoryOrderIdImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRouteLazyRoute,
  AuthRouteRoute,
  OrderRouteRoute,
  ProfileRouteRoute,
  HistoryIndexRoute,
  HistoryOrderIdRoute
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.ts",
      "children": [
        "/",
        "/auth",
        "/order",
        "/profile",
        "/history/",
        "/history/order/$id"
      ]
    },
    "/": {
      "filePath": "index/route.lazy.ts"
    },
    "/auth": {
      "filePath": "auth/route.ts"
    },
    "/order": {
      "filePath": "order/route.ts"
    },
    "/profile": {
      "filePath": "profile/route.ts"
    },
    "/history/": {
      "filePath": "history/index.ts"
    },
    "/history/order/$id": {
      "filePath": "history/order.$id.ts"
    }
  }
}
ROUTE_MANIFEST_END */
