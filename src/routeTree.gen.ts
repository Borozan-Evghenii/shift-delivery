/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as ProfileImport } from './routes/profile';
import { Route as OrderImport } from './routes/order';
import { Route as HistoryImport } from './routes/history';

// Create Virtual Routes

const AuthLazyImport = createFileRoute('/auth')();
const IndexLazyImport = createFileRoute('/')();

// Create/Update Routes

const AuthLazyRoute = AuthLazyImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute
} as any).lazy(() => import('./routes/auth.lazy').then((d) => d.Route));

const ProfileRoute = ProfileImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route));

const OrderRoute = OrderImport.update({
  path: '/order',
  getParentRoute: () => rootRoute
} as any).lazy(() => import('./routes/order.lazy').then((d) => d.Route));

const HistoryRoute = HistoryImport.update({
  path: '/history',
  getParentRoute: () => rootRoute
} as any).lazy(() => import('./routes/history.lazy').then((d) => d.Route));

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/history': {
      id: '/history';
      path: '/history';
      fullPath: '/history';
      preLoaderRoute: typeof HistoryImport;
      parentRoute: typeof rootRoute;
    };
    '/order': {
      id: '/order';
      path: '/order';
      fullPath: '/order';
      preLoaderRoute: typeof OrderImport;
      parentRoute: typeof rootRoute;
    };
    '/profile': {
      id: '/profile';
      path: '/profile';
      fullPath: '/profile';
      preLoaderRoute: typeof ProfileImport;
      parentRoute: typeof rootRoute;
    };
    '/auth': {
      id: '/auth';
      path: '/auth';
      fullPath: '/auth';
      preLoaderRoute: typeof AuthLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  HistoryRoute,
  OrderRoute,
  ProfileRoute,
  AuthLazyRoute
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/history",
        "/order",
        "/profile",
        "/auth"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/history": {
      "filePath": "history.tsx"
    },
    "/order": {
      "filePath": "order.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/auth": {
      "filePath": "auth.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
